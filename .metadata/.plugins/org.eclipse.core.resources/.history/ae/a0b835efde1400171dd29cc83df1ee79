package Problems;

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int carryover = 0;
        ListNode currentNode = null;
        ListNode headNode = null;
        boolean firstPass = true;
        while (l1 != null || l2 != null) {
            ListNode sumNode = new ListNode(0);
            if (l1 == null) {
                sumNode.val = l2.val + carryover;
            } else if (l2 == null) {
                sumNode.val = l1.val + carryover;
            } else {
                int newValue = l1.val + l2.val + carryover;
                if (newValue > 10) {
                    newValue = newValue % 10;
                    carryover = 1;
                } else {
                    carryover = 0;
                }
                sumNode.val = newValue;
                currentNode = sumNode;
              
             
            }
            l1 = l1.next;
            l2 = l2.next;
            currentNode = currentNode.next;
        }
        
        return currentNode;
    }
}

